{
  "version": "2.1.0",
  "$schema": "https://schemastore.azurewebsites.net/schemas/json/sarif-2.1.0-rtm.5.json",
  "runs": [
    {
      "results": [
        {
          "ruleId": "C26451",
          "message": {
            "text": "Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Users/Mohamed/source/repos/trapz/trapz/fparser.cc"
                },
                "region": {
                  "startLine": 2957,
                  "startColumn": 57,
                  "endLine": 2957,
                  "endColumn": 60
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "FunctionParserBase<double>::Eval",
                  "decoratedName": "?Eval@?$FunctionParserBase@N@@QEAANPEBN@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26451",
          "message": {
            "text": "Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Users/Mohamed/source/repos/trapz/trapz/fparser.cc"
                },
                "region": {
                  "startLine": 2957,
                  "startColumn": 31,
                  "endLine": 2957,
                  "endColumn": 34
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "FunctionParserBase<double>::Eval",
                  "decoratedName": "?Eval@?$FunctionParserBase@N@@QEAANPEBN@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26451",
          "message": {
            "text": "Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Users/Mohamed/source/repos/trapz/trapz/fparser.cc"
                },
                "region": {
                  "startLine": 2953,
                  "startColumn": 24,
                  "endLine": 2953,
                  "endColumn": 27
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "FunctionParserBase<double>::Eval",
                  "decoratedName": "?Eval@?$FunctionParserBase@N@@QEAANPEBN@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26451",
          "message": {
            "text": "Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Users/Mohamed/source/repos/trapz/trapz/fparser.cc"
                },
                "region": {
                  "startLine": 2955,
                  "startColumn": 47,
                  "endLine": 2955,
                  "endColumn": 50
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "FunctionParserBase<double>::Eval",
                  "decoratedName": "?Eval@?$FunctionParserBase@N@@QEAANPEBN@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26451",
          "message": {
            "text": "Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Users/Mohamed/source/repos/trapz/trapz/fparser.cc"
                },
                "region": {
                  "startLine": 2955,
                  "startColumn": 21,
                  "endLine": 2955,
                  "endColumn": 24
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "FunctionParserBase<double>::Eval",
                  "decoratedName": "?Eval@?$FunctionParserBase@N@@QEAANPEBN@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26451",
          "message": {
            "text": "Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Users/Mohamed/source/repos/trapz/trapz/fparser.cc"
                },
                "region": {
                  "startLine": 2940,
                  "startColumn": 30,
                  "endLine": 2940,
                  "endColumn": 33
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "FunctionParserBase<double>::Eval",
                  "decoratedName": "?Eval@?$FunctionParserBase@N@@QEAANPEBN@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26451",
          "message": {
            "text": "Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Users/Mohamed/source/repos/trapz/trapz/fparser.cc"
                },
                "region": {
                  "startLine": 2927,
                  "startColumn": 44,
                  "endLine": 2927,
                  "endColumn": 47
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "FunctionParserBase<double>::Eval",
                  "decoratedName": "?Eval@?$FunctionParserBase@N@@QEAANPEBN@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26451",
          "message": {
            "text": "Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Users/Mohamed/source/repos/trapz/trapz/fparser.cc"
                },
                "region": {
                  "startLine": 2927,
                  "startColumn": 21,
                  "endLine": 2927,
                  "endColumn": 24
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "FunctionParserBase<double>::Eval",
                  "decoratedName": "?Eval@?$FunctionParserBase@N@@QEAANPEBN@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26451",
          "message": {
            "text": "Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Users/Mohamed/source/repos/trapz/trapz/fparser.cc"
                },
                "region": {
                  "startLine": 2924,
                  "startColumn": 45,
                  "endLine": 2924,
                  "endColumn": 48
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "FunctionParserBase<double>::Eval",
                  "decoratedName": "?Eval@?$FunctionParserBase@N@@QEAANPEBN@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26451",
          "message": {
            "text": "Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Users/Mohamed/source/repos/trapz/trapz/fparser.cc"
                },
                "region": {
                  "startLine": 2924,
                  "startColumn": 21,
                  "endLine": 2924,
                  "endColumn": 24
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "FunctionParserBase<double>::Eval",
                  "decoratedName": "?Eval@?$FunctionParserBase@N@@QEAANPEBN@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26451",
          "message": {
            "text": "Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Users/Mohamed/source/repos/trapz/trapz/fparser.cc"
                },
                "region": {
                  "startLine": 2915,
                  "startColumn": 44,
                  "endLine": 2915,
                  "endColumn": 47
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "FunctionParserBase<double>::Eval",
                  "decoratedName": "?Eval@?$FunctionParserBase@N@@QEAANPEBN@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26451",
          "message": {
            "text": "Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Users/Mohamed/source/repos/trapz/trapz/fparser.cc"
                },
                "region": {
                  "startLine": 2911,
                  "startColumn": 42,
                  "endLine": 2911,
                  "endColumn": 45
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "FunctionParserBase<double>::Eval",
                  "decoratedName": "?Eval@?$FunctionParserBase@N@@QEAANPEBN@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26451",
          "message": {
            "text": "Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Users/Mohamed/source/repos/trapz/trapz/fparser.cc"
                },
                "region": {
                  "startLine": 2900,
                  "startColumn": 26,
                  "endLine": 2900,
                  "endColumn": 29
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "FunctionParserBase<double>::Eval",
                  "decoratedName": "?Eval@?$FunctionParserBase@N@@QEAANPEBN@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26451",
          "message": {
            "text": "Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Users/Mohamed/source/repos/trapz/trapz/fparser.cc"
                },
                "region": {
                  "startLine": 2901,
                  "startColumn": 28,
                  "endLine": 2901,
                  "endColumn": 31
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "FunctionParserBase<double>::Eval",
                  "decoratedName": "?Eval@?$FunctionParserBase@N@@QEAANPEBN@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26451",
          "message": {
            "text": "Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Users/Mohamed/source/repos/trapz/trapz/fparser.cc"
                },
                "region": {
                  "startLine": 2903,
                  "startColumn": 43,
                  "endLine": 2903,
                  "endColumn": 46
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "FunctionParserBase<double>::Eval",
                  "decoratedName": "?Eval@?$FunctionParserBase@N@@QEAANPEBN@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26451",
          "message": {
            "text": "Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Users/Mohamed/source/repos/trapz/trapz/fparser.cc"
                },
                "region": {
                  "startLine": 2903,
                  "startColumn": 21,
                  "endLine": 2903,
                  "endColumn": 24
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "FunctionParserBase<double>::Eval",
                  "decoratedName": "?Eval@?$FunctionParserBase@N@@QEAANPEBN@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26451",
          "message": {
            "text": "Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Users/Mohamed/source/repos/trapz/trapz/fparser.cc"
                },
                "region": {
                  "startLine": 2884,
                  "startColumn": 25,
                  "endLine": 2884,
                  "endColumn": 28
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "FunctionParserBase<double>::Eval",
                  "decoratedName": "?Eval@?$FunctionParserBase@N@@QEAANPEBN@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26451",
          "message": {
            "text": "Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Users/Mohamed/source/repos/trapz/trapz/fparser.cc"
                },
                "region": {
                  "startLine": 2867,
                  "startColumn": 31,
                  "endLine": 2867,
                  "endColumn": 41
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "FunctionParserBase<double>::Eval",
                  "decoratedName": "?Eval@?$FunctionParserBase@N@@QEAANPEBN@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26451",
          "message": {
            "text": "Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Users/Mohamed/source/repos/trapz/trapz/fparser.cc"
                },
                "region": {
                  "startLine": 2867,
                  "startColumn": 31,
                  "endLine": 2867,
                  "endColumn": 34
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "FunctionParserBase<double>::Eval",
                  "decoratedName": "?Eval@?$FunctionParserBase@N@@QEAANPEBN@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26451",
          "message": {
            "text": "Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Users/Mohamed/source/repos/trapz/trapz/fparser.cc"
                },
                "region": {
                  "startLine": 2853,
                  "startColumn": 66,
                  "endLine": 2853,
                  "endColumn": 76
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "FunctionParserBase<double>::Eval",
                  "decoratedName": "?Eval@?$FunctionParserBase@N@@QEAANPEBN@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26451",
          "message": {
            "text": "Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Users/Mohamed/source/repos/trapz/trapz/fparser.cc"
                },
                "region": {
                  "startLine": 2853,
                  "startColumn": 66,
                  "endLine": 2853,
                  "endColumn": 69
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "FunctionParserBase<double>::Eval",
                  "decoratedName": "?Eval@?$FunctionParserBase@N@@QEAANPEBN@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26451",
          "message": {
            "text": "Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Users/Mohamed/source/repos/trapz/trapz/fparser.cc"
                },
                "region": {
                  "startLine": 2855,
                  "startColumn": 31,
                  "endLine": 2855,
                  "endColumn": 41
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "FunctionParserBase<double>::Eval",
                  "decoratedName": "?Eval@?$FunctionParserBase@N@@QEAANPEBN@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26451",
          "message": {
            "text": "Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Users/Mohamed/source/repos/trapz/trapz/fparser.cc"
                },
                "region": {
                  "startLine": 2855,
                  "startColumn": 31,
                  "endLine": 2855,
                  "endColumn": 34
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "FunctionParserBase<double>::Eval",
                  "decoratedName": "?Eval@?$FunctionParserBase@N@@QEAANPEBN@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26451",
          "message": {
            "text": "Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Users/Mohamed/source/repos/trapz/trapz/fparser.cc"
                },
                "region": {
                  "startLine": 2839,
                  "startColumn": 41,
                  "endLine": 2839,
                  "endColumn": 44
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "FunctionParserBase<double>::Eval",
                  "decoratedName": "?Eval@?$FunctionParserBase@N@@QEAANPEBN@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26451",
          "message": {
            "text": "Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Users/Mohamed/source/repos/trapz/trapz/fparser.cc"
                },
                "region": {
                  "startLine": 2839,
                  "startColumn": 21,
                  "endLine": 2839,
                  "endColumn": 24
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "FunctionParserBase<double>::Eval",
                  "decoratedName": "?Eval@?$FunctionParserBase@N@@QEAANPEBN@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26451",
          "message": {
            "text": "Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Users/Mohamed/source/repos/trapz/trapz/fparser.cc"
                },
                "region": {
                  "startLine": 2835,
                  "startColumn": 42,
                  "endLine": 2835,
                  "endColumn": 45
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "FunctionParserBase<double>::Eval",
                  "decoratedName": "?Eval@?$FunctionParserBase@N@@QEAANPEBN@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26451",
          "message": {
            "text": "Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Users/Mohamed/source/repos/trapz/trapz/fparser.cc"
                },
                "region": {
                  "startLine": 2835,
                  "startColumn": 21,
                  "endLine": 2835,
                  "endColumn": 24
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "FunctionParserBase<double>::Eval",
                  "decoratedName": "?Eval@?$FunctionParserBase@N@@QEAANPEBN@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26451",
          "message": {
            "text": "Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Users/Mohamed/source/repos/trapz/trapz/fparser.cc"
                },
                "region": {
                  "startLine": 2827,
                  "startColumn": 58,
                  "endLine": 2827,
                  "endColumn": 61
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "FunctionParserBase<double>::Eval",
                  "decoratedName": "?Eval@?$FunctionParserBase@N@@QEAANPEBN@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26451",
          "message": {
            "text": "Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Users/Mohamed/source/repos/trapz/trapz/fparser.cc"
                },
                "region": {
                  "startLine": 2827,
                  "startColumn": 21,
                  "endLine": 2827,
                  "endColumn": 24
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "FunctionParserBase<double>::Eval",
                  "decoratedName": "?Eval@?$FunctionParserBase@N@@QEAANPEBN@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26451",
          "message": {
            "text": "Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Users/Mohamed/source/repos/trapz/trapz/fparser.cc"
                },
                "region": {
                  "startLine": 2823,
                  "startColumn": 54,
                  "endLine": 2823,
                  "endColumn": 57
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "FunctionParserBase<double>::Eval",
                  "decoratedName": "?Eval@?$FunctionParserBase@N@@QEAANPEBN@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26451",
          "message": {
            "text": "Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Users/Mohamed/source/repos/trapz/trapz/fparser.cc"
                },
                "region": {
                  "startLine": 2823,
                  "startColumn": 21,
                  "endLine": 2823,
                  "endColumn": 24
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "FunctionParserBase<double>::Eval",
                  "decoratedName": "?Eval@?$FunctionParserBase@N@@QEAANPEBN@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26451",
          "message": {
            "text": "Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Users/Mohamed/source/repos/trapz/trapz/fparser.cc"
                },
                "region": {
                  "startLine": 2819,
                  "startColumn": 47,
                  "endLine": 2819,
                  "endColumn": 50
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "FunctionParserBase<double>::Eval",
                  "decoratedName": "?Eval@?$FunctionParserBase@N@@QEAANPEBN@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26451",
          "message": {
            "text": "Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Users/Mohamed/source/repos/trapz/trapz/fparser.cc"
                },
                "region": {
                  "startLine": 2819,
                  "startColumn": 21,
                  "endLine": 2819,
                  "endColumn": 24
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "FunctionParserBase<double>::Eval",
                  "decoratedName": "?Eval@?$FunctionParserBase@N@@QEAANPEBN@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26451",
          "message": {
            "text": "Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Users/Mohamed/source/repos/trapz/trapz/fparser.cc"
                },
                "region": {
                  "startLine": 2815,
                  "startColumn": 43,
                  "endLine": 2815,
                  "endColumn": 46
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "FunctionParserBase<double>::Eval",
                  "decoratedName": "?Eval@?$FunctionParserBase@N@@QEAANPEBN@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26451",
          "message": {
            "text": "Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Users/Mohamed/source/repos/trapz/trapz/fparser.cc"
                },
                "region": {
                  "startLine": 2815,
                  "startColumn": 21,
                  "endLine": 2815,
                  "endColumn": 24
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "FunctionParserBase<double>::Eval",
                  "decoratedName": "?Eval@?$FunctionParserBase@N@@QEAANPEBN@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26451",
          "message": {
            "text": "Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Users/Mohamed/source/repos/trapz/trapz/fparser.cc"
                },
                "region": {
                  "startLine": 2811,
                  "startColumn": 45,
                  "endLine": 2811,
                  "endColumn": 48
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "FunctionParserBase<double>::Eval",
                  "decoratedName": "?Eval@?$FunctionParserBase@N@@QEAANPEBN@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26451",
          "message": {
            "text": "Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Users/Mohamed/source/repos/trapz/trapz/fparser.cc"
                },
                "region": {
                  "startLine": 2811,
                  "startColumn": 21,
                  "endLine": 2811,
                  "endColumn": 24
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "FunctionParserBase<double>::Eval",
                  "decoratedName": "?Eval@?$FunctionParserBase@N@@QEAANPEBN@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26451",
          "message": {
            "text": "Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Users/Mohamed/source/repos/trapz/trapz/fparser.cc"
                },
                "region": {
                  "startLine": 2807,
                  "startColumn": 44,
                  "endLine": 2807,
                  "endColumn": 47
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "FunctionParserBase<double>::Eval",
                  "decoratedName": "?Eval@?$FunctionParserBase@N@@QEAANPEBN@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26451",
          "message": {
            "text": "Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Users/Mohamed/source/repos/trapz/trapz/fparser.cc"
                },
                "region": {
                  "startLine": 2807,
                  "startColumn": 21,
                  "endLine": 2807,
                  "endColumn": 24
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "FunctionParserBase<double>::Eval",
                  "decoratedName": "?Eval@?$FunctionParserBase@N@@QEAANPEBN@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26451",
          "message": {
            "text": "Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Users/Mohamed/source/repos/trapz/trapz/fparser.cc"
                },
                "region": {
                  "startLine": 2803,
                  "startColumn": 42,
                  "endLine": 2803,
                  "endColumn": 45
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "FunctionParserBase<double>::Eval",
                  "decoratedName": "?Eval@?$FunctionParserBase@N@@QEAANPEBN@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26451",
          "message": {
            "text": "Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Users/Mohamed/source/repos/trapz/trapz/fparser.cc"
                },
                "region": {
                  "startLine": 2803,
                  "startColumn": 21,
                  "endLine": 2803,
                  "endColumn": 24
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "FunctionParserBase<double>::Eval",
                  "decoratedName": "?Eval@?$FunctionParserBase@N@@QEAANPEBN@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26451",
          "message": {
            "text": "Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Users/Mohamed/source/repos/trapz/trapz/fparser.cc"
                },
                "region": {
                  "startLine": 2798,
                  "startColumn": 21,
                  "endLine": 2798,
                  "endColumn": 24
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "FunctionParserBase<double>::Eval",
                  "decoratedName": "?Eval@?$FunctionParserBase@N@@QEAANPEBN@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26451",
          "message": {
            "text": "Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Users/Mohamed/source/repos/trapz/trapz/fparser.cc"
                },
                "region": {
                  "startLine": 2793,
                  "startColumn": 30,
                  "endLine": 2793,
                  "endColumn": 33
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "FunctionParserBase<double>::Eval",
                  "decoratedName": "?Eval@?$FunctionParserBase@N@@QEAANPEBN@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26451",
          "message": {
            "text": "Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Users/Mohamed/source/repos/trapz/trapz/fparser.cc"
                },
                "region": {
                  "startLine": 2792,
                  "startColumn": 30,
                  "endLine": 2792,
                  "endColumn": 33
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "FunctionParserBase<double>::Eval",
                  "decoratedName": "?Eval@?$FunctionParserBase@N@@QEAANPEBN@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26451",
          "message": {
            "text": "Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Users/Mohamed/source/repos/trapz/trapz/fparser.cc"
                },
                "region": {
                  "startLine": 2791,
                  "startColumn": 30,
                  "endLine": 2791,
                  "endColumn": 33
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "FunctionParserBase<double>::Eval",
                  "decoratedName": "?Eval@?$FunctionParserBase@N@@QEAANPEBN@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26451",
          "message": {
            "text": "Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Users/Mohamed/source/repos/trapz/trapz/fparser.cc"
                },
                "region": {
                  "startLine": 2747,
                  "startColumn": 24,
                  "endLine": 2747,
                  "endColumn": 27
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "FunctionParserBase<double>::Eval",
                  "decoratedName": "?Eval@?$FunctionParserBase@N@@QEAANPEBN@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26451",
          "message": {
            "text": "Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Users/Mohamed/source/repos/trapz/trapz/fparser.cc"
                },
                "region": {
                  "startLine": 2750,
                  "startColumn": 42,
                  "endLine": 2750,
                  "endColumn": 45
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "FunctionParserBase<double>::Eval",
                  "decoratedName": "?Eval@?$FunctionParserBase@N@@QEAANPEBN@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26451",
          "message": {
            "text": "Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Users/Mohamed/source/repos/trapz/trapz/fparser.cc"
                },
                "region": {
                  "startLine": 2750,
                  "startColumn": 21,
                  "endLine": 2750,
                  "endColumn": 24
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "FunctionParserBase<double>::Eval",
                  "decoratedName": "?Eval@?$FunctionParserBase@N@@QEAANPEBN@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26451",
          "message": {
            "text": "Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Users/Mohamed/source/repos/trapz/trapz/fparser.cc"
                },
                "region": {
                  "startLine": 2735,
                  "startColumn": 51,
                  "endLine": 2735,
                  "endColumn": 54
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "FunctionParserBase<double>::Eval",
                  "decoratedName": "?Eval@?$FunctionParserBase@N@@QEAANPEBN@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26451",
          "message": {
            "text": "Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Users/Mohamed/source/repos/trapz/trapz/fparser.cc"
                },
                "region": {
                  "startLine": 2735,
                  "startColumn": 30,
                  "endLine": 2735,
                  "endColumn": 33
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "FunctionParserBase<double>::Eval",
                  "decoratedName": "?Eval@?$FunctionParserBase@N@@QEAANPEBN@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26451",
          "message": {
            "text": "Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Users/Mohamed/source/repos/trapz/trapz/fparser.cc"
                },
                "region": {
                  "startLine": 2732,
                  "startColumn": 51,
                  "endLine": 2732,
                  "endColumn": 54
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "FunctionParserBase<double>::Eval",
                  "decoratedName": "?Eval@?$FunctionParserBase@N@@QEAANPEBN@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26451",
          "message": {
            "text": "Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Users/Mohamed/source/repos/trapz/trapz/fparser.cc"
                },
                "region": {
                  "startLine": 2732,
                  "startColumn": 30,
                  "endLine": 2732,
                  "endColumn": 33
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "FunctionParserBase<double>::Eval",
                  "decoratedName": "?Eval@?$FunctionParserBase@N@@QEAANPEBN@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26451",
          "message": {
            "text": "Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Users/Mohamed/source/repos/trapz/trapz/fparser.cc"
                },
                "region": {
                  "startLine": 2693,
                  "startColumn": 44,
                  "endLine": 2693,
                  "endColumn": 47
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "FunctionParserBase<double>::Eval",
                  "decoratedName": "?Eval@?$FunctionParserBase@N@@QEAANPEBN@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26451",
          "message": {
            "text": "Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Users/Mohamed/source/repos/trapz/trapz/fparser.cc"
                },
                "region": {
                  "startLine": 2693,
                  "startColumn": 21,
                  "endLine": 2693,
                  "endColumn": 24
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "FunctionParserBase<double>::Eval",
                  "decoratedName": "?Eval@?$FunctionParserBase@N@@QEAANPEBN@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26451",
          "message": {
            "text": "Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Users/Mohamed/source/repos/trapz/trapz/fparser.cc"
                },
                "region": {
                  "startLine": 2651,
                  "startColumn": 53,
                  "endLine": 2651,
                  "endColumn": 56
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "FunctionParserBase<double>::Eval",
                  "decoratedName": "?Eval@?$FunctionParserBase@N@@QEAANPEBN@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26451",
          "message": {
            "text": "Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Users/Mohamed/source/repos/trapz/trapz/fparser.cc"
                },
                "region": {
                  "startLine": 2651,
                  "startColumn": 30,
                  "endLine": 2651,
                  "endColumn": 33
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "FunctionParserBase<double>::Eval",
                  "decoratedName": "?Eval@?$FunctionParserBase@N@@QEAANPEBN@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C6011",
          "message": {
            "text": "Dereferencing NULL pointer 'ByteCodePtr'. "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Users/Mohamed/source/repos/trapz/trapz/extrasrc/fp_opcode_add.inc"
                },
                "region": {
                  "startLine": 2655,
                  "startColumn": 6
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "FunctionParserBase<double>::AddFunctionOpcode",
                  "decoratedName": "?AddFunctionOpcode@?$FunctionParserBase@N@@AEAAXI@Z",
                  "kind": "function"
                }
              ]
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "file:///C:/Users/Mohamed/source/repos/trapz/trapz/extrasrc/fp_opcode_add.inc"
                          },
                          "region": {
                            "startLine": 334,
                            "startColumn": 4
                          }
                        }
                      },
                      "importance": "unimportant"
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "file:///C:/Users/Mohamed/source/repos/trapz/trapz/extrasrc/fp_opcode_add.inc"
                          },
                          "region": {
                            "startLine": 334,
                            "startColumn": 10
                          }
                        }
                      },
                      "importance": "unimportant"
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "file:///C:/Users/Mohamed/source/repos/trapz/trapz/extrasrc/fp_opcode_add.inc"
                          },
                          "region": {
                            "startLine": 336,
                            "startColumn": 1
                          }
                        },
                        "message": {
                          "text": "'ByteCodePtr' may be NULL"
                        }
                      },
                      "kinds": [
                        "declaration"
                      ],
                      "importance": "essential"
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "file:///C:/Users/Mohamed/source/repos/trapz/trapz/extrasrc/fp_opcode_add.inc"
                          },
                          "region": {
                            "startLine": 2649,
                            "startColumn": 1
                          }
                        }
                      },
                      "importance": "unimportant"
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "file:///C:/Users/Mohamed/source/repos/trapz/trapz/extrasrc/fp_opcode_add.inc"
                          },
                          "region": {
                            "startLine": 2650,
                            "startColumn": 1
                          }
                        }
                      },
                      "importance": "unimportant"
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "file:///C:/Users/Mohamed/source/repos/trapz/trapz/extrasrc/fp_opcode_add.inc"
                          },
                          "region": {
                            "startLine": 2651,
                            "startColumn": 1
                          }
                        }
                      },
                      "importance": "unimportant"
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "file:///C:/Users/Mohamed/source/repos/trapz/trapz/extrasrc/fp_opcode_add.inc"
                          },
                          "region": {
                            "startLine": 2652,
                            "startColumn": 1
                          }
                        }
                      },
                      "importance": "unimportant"
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "file:///C:/Users/Mohamed/source/repos/trapz/trapz/extrasrc/fp_opcode_add.inc"
                          },
                          "region": {
                            "startLine": 2653,
                            "startColumn": 1
                          }
                        }
                      },
                      "importance": "unimportant"
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "file:///C:/Users/Mohamed/source/repos/trapz/trapz/extrasrc/fp_opcode_add.inc"
                          },
                          "region": {
                            "startLine": 2654,
                            "startColumn": 1
                          }
                        },
                        "message": {
                          "text": "Assume switch ( 'opcode' ) resolves to case cAbs: "
                        }
                      },
                      "kinds": [
                        "branch"
                      ]
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "file:///C:/Users/Mohamed/source/repos/trapz/trapz/extrasrc/fp_opcode_add.inc"
                          },
                          "region": {
                            "startLine": 2654,
                            "startColumn": 19
                          }
                        }
                      },
                      "importance": "unimportant"
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "file:///C:/Users/Mohamed/source/repos/trapz/trapz/extrasrc/fp_opcode_add.inc"
                          },
                          "region": {
                            "startLine": 2655,
                            "startColumn": 6
                          }
                        }
                      },
                      "importance": "unimportant"
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "file:///C:/Users/Mohamed/source/repos/trapz/trapz/extrasrc/fp_opcode_add.inc"
                          },
                          "region": {
                            "startLine": 2655,
                            "startColumn": 6
                          }
                        },
                        "message": {
                          "text": "'ByteCodePtr' is dereferenced, but may still be NULL"
                        }
                      },
                      "kinds": [
                        "usage"
                      ],
                      "importance": "essential"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C6011",
          "message": {
            "text": "Dereferencing NULL pointer 'ImmedPtr'. "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Users/Mohamed/source/repos/trapz/trapz/extrasrc/fp_opcode_add.inc"
                },
                "region": {
                  "startLine": 2656,
                  "startColumn": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "FunctionParserBase<double>::AddFunctionOpcode",
                  "decoratedName": "?AddFunctionOpcode@?$FunctionParserBase@N@@AEAAXI@Z",
                  "kind": "function"
                }
              ]
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "file:///C:/Users/Mohamed/source/repos/trapz/trapz/extrasrc/fp_opcode_add.inc"
                          },
                          "region": {
                            "startLine": 334,
                            "startColumn": 4
                          }
                        }
                      },
                      "importance": "unimportant"
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "file:///C:/Users/Mohamed/source/repos/trapz/trapz/extrasrc/fp_opcode_add.inc"
                          },
                          "region": {
                            "startLine": 334,
                            "startColumn": 10
                          }
                        }
                      },
                      "importance": "unimportant"
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "file:///C:/Users/Mohamed/source/repos/trapz/trapz/extrasrc/fp_opcode_add.inc"
                          },
                          "region": {
                            "startLine": 336,
                            "startColumn": 1
                          }
                        }
                      },
                      "importance": "unimportant"
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "file:///C:/Users/Mohamed/source/repos/trapz/trapz/extrasrc/fp_opcode_add.inc"
                          },
                          "region": {
                            "startLine": 2649,
                            "startColumn": 1
                          }
                        }
                      },
                      "importance": "unimportant"
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "file:///C:/Users/Mohamed/source/repos/trapz/trapz/extrasrc/fp_opcode_add.inc"
                          },
                          "region": {
                            "startLine": 2650,
                            "startColumn": 1
                          }
                        }
                      },
                      "importance": "unimportant"
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "file:///C:/Users/Mohamed/source/repos/trapz/trapz/extrasrc/fp_opcode_add.inc"
                          },
                          "region": {
                            "startLine": 2651,
                            "startColumn": 1
                          }
                        }
                      },
                      "importance": "unimportant"
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "file:///C:/Users/Mohamed/source/repos/trapz/trapz/extrasrc/fp_opcode_add.inc"
                          },
                          "region": {
                            "startLine": 2652,
                            "startColumn": 1
                          }
                        }
                      },
                      "importance": "unimportant"
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "file:///C:/Users/Mohamed/source/repos/trapz/trapz/extrasrc/fp_opcode_add.inc"
                          },
                          "region": {
                            "startLine": 2653,
                            "startColumn": 1
                          }
                        }
                      },
                      "importance": "unimportant"
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "file:///C:/Users/Mohamed/source/repos/trapz/trapz/extrasrc/fp_opcode_add.inc"
                          },
                          "region": {
                            "startLine": 2654,
                            "startColumn": 1
                          }
                        },
                        "message": {
                          "text": "Assume switch ( 'opcode' ) resolves to case cAbs: "
                        }
                      },
                      "kinds": [
                        "branch"
                      ]
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "file:///C:/Users/Mohamed/source/repos/trapz/trapz/extrasrc/fp_opcode_add.inc"
                          },
                          "region": {
                            "startLine": 2654,
                            "startColumn": 19
                          }
                        }
                      },
                      "importance": "unimportant"
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "file:///C:/Users/Mohamed/source/repos/trapz/trapz/extrasrc/fp_opcode_add.inc"
                          },
                          "region": {
                            "startLine": 2655,
                            "startColumn": 6
                          }
                        },
                        "message": {
                          "text": "Assume switch ( 'ByteCodePtr[0]' ) resolves to case cNeg: "
                        }
                      },
                      "kinds": [
                        "branch"
                      ]
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "file:///C:/Users/Mohamed/source/repos/trapz/trapz/extrasrc/fp_opcode_add.inc"
                          },
                          "region": {
                            "startLine": 2656,
                            "startColumn": 1
                          }
                        },
                        "message": {
                          "text": "Go to Lab"
                        }
                      },
                      "kinds": [
                        "branch"
                      ]
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "file:///C:/Users/Mohamed/source/repos/trapz/trapz/extrasrc/fp_opcode_add.inc"
                          },
                          "region": {
                            "startLine": 4571,
                            "startColumn": 1
                          }
                        }
                      },
                      "importance": "unimportant"
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "file:///C:/Users/Mohamed/source/repos/trapz/trapz/extrasrc/fp_opcode_add.inc"
                          },
                          "region": {
                            "startLine": 4571,
                            "startColumn": 5
                          }
                        }
                      },
                      "importance": "unimportant"
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "file:///C:/Users/Mohamed/source/repos/trapz/trapz/extrasrc/fp_opcode_add.inc"
                          },
                          "region": {
                            "startLine": 4572,
                            "startColumn": 1
                          }
                        }
                      },
                      "importance": "unimportant"
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "file:///C:/Users/Mohamed/source/repos/trapz/trapz/extrasrc/fp_opcode_add.inc"
                          },
                          "region": {
                            "startLine": 4572,
                            "startColumn": 14
                          }
                        },
                        "message": {
                          "text": "Go to TailCall_cAbs"
                        }
                      },
                      "kinds": [
                        "branch"
                      ]
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "file:///C:/Users/Mohamed/source/repos/trapz/trapz/extrasrc/fp_opcode_add.inc"
                          },
                          "region": {
                            "startLine": 2654,
                            "startColumn": 5
                          }
                        }
                      },
                      "importance": "unimportant"
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "file:///C:/Users/Mohamed/source/repos/trapz/trapz/extrasrc/fp_opcode_add.inc"
                          },
                          "region": {
                            "startLine": 2654,
                            "startColumn": 19
                          }
                        },
                        "message": {
                          "text": "Skip this branch, (assume '!ByteCodePtr' is false)"
                        }
                      },
                      "kinds": [
                        "branch"
                      ]
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "file:///C:/Users/Mohamed/source/repos/trapz/trapz/extrasrc/fp_opcode_add.inc"
                          },
                          "region": {
                            "startLine": 2655,
                            "startColumn": 6
                          }
                        },
                        "message": {
                          "text": "Assume switch ( 'ByteCodePtr[0]' ) resolves to case cNeg: "
                        }
                      },
                      "kinds": [
                        "branch"
                      ]
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "file:///C:/Users/Mohamed/source/repos/trapz/trapz/extrasrc/fp_opcode_add.inc"
                          },
                          "region": {
                            "startLine": 2656,
                            "startColumn": 1
                          }
                        },
                        "message": {
                          "text": "Go to Lab"
                        }
                      },
                      "kinds": [
                        "branch"
                      ]
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "file:///C:/Users/Mohamed/source/repos/trapz/trapz/extrasrc/fp_opcode_add.inc"
                          },
                          "region": {
                            "startLine": 4571,
                            "startColumn": 1
                          }
                        }
                      },
                      "importance": "unimportant"
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "file:///C:/Users/Mohamed/source/repos/trapz/trapz/extrasrc/fp_opcode_add.inc"
                          },
                          "region": {
                            "startLine": 4571,
                            "startColumn": 5
                          }
                        }
                      },
                      "importance": "unimportant"
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "file:///C:/Users/Mohamed/source/repos/trapz/trapz/extrasrc/fp_opcode_add.inc"
                          },
                          "region": {
                            "startLine": 4572,
                            "startColumn": 1
                          }
                        }
                      },
                      "importance": "unimportant"
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "file:///C:/Users/Mohamed/source/repos/trapz/trapz/extrasrc/fp_opcode_add.inc"
                          },
                          "region": {
                            "startLine": 4572,
                            "startColumn": 14
                          }
                        },
                        "message": {
                          "text": "Go to TailCall_cAbs"
                        }
                      },
                      "kinds": [
                        "branch"
                      ]
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "file:///C:/Users/Mohamed/source/repos/trapz/trapz/extrasrc/fp_opcode_add.inc"
                          },
                          "region": {
                            "startLine": 2654,
                            "startColumn": 5
                          }
                        }
                      },
                      "importance": "unimportant"
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "file:///C:/Users/Mohamed/source/repos/trapz/trapz/extrasrc/fp_opcode_add.inc"
                          },
                          "region": {
                            "startLine": 2654,
                            "startColumn": 19
                          }
                        },
                        "message": {
                          "text": "Skip this branch, (assume '!ByteCodePtr' is false)"
                        }
                      },
                      "kinds": [
                        "branch"
                      ]
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "file:///C:/Users/Mohamed/source/repos/trapz/trapz/extrasrc/fp_opcode_add.inc"
                          },
                          "region": {
                            "startLine": 2655,
                            "startColumn": 6
                          }
                        },
                        "message": {
                          "text": "Assume switch ( 'ByteCodePtr[0]' ) resolves to case cImmed: "
                        }
                      },
                      "kinds": [
                        "branch"
                      ]
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "file:///C:/Users/Mohamed/source/repos/trapz/trapz/extrasrc/fp_opcode_add.inc"
                          },
                          "region": {
                            "startLine": 2656,
                            "startColumn": 1
                          }
                        }
                      },
                      "importance": "unimportant"
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "file:///C:/Users/Mohamed/source/repos/trapz/trapz/extrasrc/fp_opcode_add.inc"
                          },
                          "region": {
                            "startLine": 2656,
                            "startColumn": 1
                          }
                        },
                        "message": {
                          "text": "'ImmedPtr' is dereferenced, but may still be NULL"
                        }
                      },
                      "kinds": [
                        "usage"
                      ],
                      "importance": "essential"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26495",
          "message": {
            "text": "Variable 'FunctionParserBase<double>::Data::mHasByteCodeFlags' is uninitialized. Always initialize a member variable (type.6)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Users/Mohamed/source/repos/trapz/trapz/fparser.cc"
                },
                "region": {
                  "startLine": 726,
                  "startColumn": 36
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "FunctionParserBase<double>::Data::{ctor}",
                  "decoratedName": "??0Data@?$FunctionParserBase@N@@QEAA@AEBU01@@Z",
                  "kind": "function"
                }
              ]
            }
          ],
          "properties": {
            "targetSymbol": "FunctionParserBase<double>::Data::mHasByteCodeFlags"
          }
        },
        {
          "ruleId": "C26495",
          "message": {
            "text": "Variable 'FunctionParserBase<double>::Data::mHasByteCodeFlags' is uninitialized. Always initialize a member variable (type.6)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Users/Mohamed/source/repos/trapz/trapz/fparser.cc"
                },
                "region": {
                  "startLine": 714,
                  "startColumn": 36
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "FunctionParserBase<double>::Data::{ctor}",
                  "decoratedName": "??0Data@?$FunctionParserBase@N@@QEAA@XZ",
                  "kind": "function"
                }
              ]
            }
          ],
          "properties": {
            "targetSymbol": "FunctionParserBase<double>::Data::mHasByteCodeFlags"
          }
        },
        {
          "ruleId": "C6385",
          "message": {
            "text": "Reading invalid data from 'Functions'."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Users/Mohamed/source/repos/trapz/trapz/fparser.cc"
                },
                "region": {
                  "startLine": 432,
                  "startColumn": 13
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "`anonymous-namespace'::readIdentifier",
                  "decoratedName": "??$readIdentifier@N@?A0x5960c264@@YAIPEBD@Z",
                  "kind": "function"
                }
              ]
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "file:///C:/Users/Mohamed/source/repos/trapz/trapz/fparser.cc"
                          },
                          "region": {
                            "startLine": 421,
                            "startColumn": 24
                          }
                        }
                      },
                      "importance": "unimportant"
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "file:///C:/Users/Mohamed/source/repos/trapz/trapz/fparser.cc"
                          },
                          "region": {
                            "startLine": 422,
                            "startColumn": 35
                          }
                        },
                        "message": {
                          "text": "Enter this branch, (assume '((value&2147483648))!=0')"
                        }
                      },
                      "kinds": [
                        "branch"
                      ]
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "file:///C:/Users/Mohamed/source/repos/trapz/trapz/fparser.cc"
                          },
                          "region": {
                            "startLine": 426,
                            "startColumn": 13
                          }
                        },
                        "message": {
                          "text": "Skip this branch, (assume 'result' is false)"
                        }
                      },
                      "kinds": [
                        "branch"
                      ]
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "file:///C:/Users/Mohamed/source/repos/trapz/trapz/fparser.cc"
                          },
                          "region": {
                            "startLine": 432,
                            "startColumn": 13
                          }
                        },
                        "message": {
                          "text": "'Functions' is an Output from 'FUNCTIONPARSERTYPES::FuncDefinition::complexOnly' (declared at c:\\users\\mohamed\\source\\repos\\trapz\\trapz\\extrasrc\\fptypes.hh:109)"
                        }
                      },
                      "kinds": [
                        "declaration"
                      ]
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "file:///C:/Users/Mohamed/source/repos/trapz/trapz/fparser.cc"
                          },
                          "region": {
                            "startLine": 432,
                            "startColumn": 13
                          }
                        },
                        "message": {
                          "text": "Invalid read from 'Functions[32767]', (readable range is 0 to 37)"
                        }
                      },
                      "kinds": [
                        "usage"
                      ],
                      "importance": "essential"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "tool": {
        "driver": {
          "name": "PREfast",
          "fullName": "PREfast Code Analysis",
          "version": "14.37.32825.0",
          "informationUri": "https://aka.ms/cpp/ca"
        }
      },
      "invocations": [
        {
          "executionSuccessful": true
        }
      ],
      "artifacts": [
        {
          "location": {
            "uri": "file:///C:/Users/Mohamed/source/repos/trapz/trapz/fparser.cc"
          },
          "roles": [
            "analysisTarget",
            "resultFile"
          ],
          "hashes": {
            "sha-256": "d1a722ebe1cc74ffc8cf8a6b68894bff0695ffcd25d1cb582d447ea0187cc831"
          }
        },
        {
          "location": {
            "uri": "file:///C:/Users/Mohamed/source/repos/trapz/trapz/extrasrc/fp_opcode_add.inc"
          },
          "roles": [
            "resultFile"
          ],
          "hashes": {
            "sha-256": "1cef860ef3f22600d29f0b6411705e91c527e6d33e54905ce00e7378964f6bc1"
          }
        },
        {
          "location": {
            "uri": "file:///c:/users/mohamed/source/repos/trapz/trapz/fpconfig.hh"
          },
          "hashes": {
            "sha-256": "7d2a6b9f235090ec41f9085f50d613f5b50ef3637104395322776c0c7653b1de"
          }
        },
        {
          "location": {
            "uri": "file:///c:/users/mohamed/desktop/fparser4.5.2/fparser.hh"
          },
          "hashes": {
            "sha-256": "14c25f2781e090b872bf85a81c513501afbdecc2b315d0a81130654642ddfcd2"
          }
        },
        {
          "location": {
            "uri": "file:///c:/users/mohamed/source/repos/trapz/trapz/extrasrc/fptypes.hh"
          },
          "hashes": {
            "sha-256": "768bcd90d7828db7538cdf04174e3a26240cfaf64a8303c10c7517eb05b5f4fb"
          }
        },
        {
          "location": {
            "uri": "file:///c:/users/mohamed/source/repos/trapz/trapz/extrasrc/fpaux.hh"
          },
          "hashes": {
            "sha-256": "a82d0a3265a8b8b9bad10fc7de6b1ed930f8b08666e5b25ca7be6a61b0d4dffd"
          }
        },
        {
          "location": {
            "uri": "file:///c:/users/mohamed/source/repos/trapz/trapz/extrasrc/fp_identifier_parser.inc"
          },
          "hashes": {
            "sha-256": "910bd04d442dc59afc48ba377d25da6638097555230af24f26e134accdc47b34"
          }
        }
      ]
    }
  ]
}