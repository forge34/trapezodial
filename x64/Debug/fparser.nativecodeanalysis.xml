<?xml version="1.0" encoding="UTF-8"?>
<DEFECTS>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\Mohamed\source\repos\trapz\trapz\</FILEPATH>
      <FILENAME>fparser.cc</FILENAME>
      <LINE>2957</LINE>
      <COLUMN>58</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>FunctionParserBase&lt;double&gt;::Eval</FUNCTION>
    <DECORATED>?Eval@?$FunctionParserBase@N@@QEAANPEBN@Z</DECORATED>
    <FUNCLINE>2587</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\Mohamed\source\repos\trapz\trapz\</FILEPATH>
      <FILENAME>fparser.cc</FILENAME>
      <LINE>2957</LINE>
      <COLUMN>32</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>FunctionParserBase&lt;double&gt;::Eval</FUNCTION>
    <DECORATED>?Eval@?$FunctionParserBase@N@@QEAANPEBN@Z</DECORATED>
    <FUNCLINE>2587</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\Mohamed\source\repos\trapz\trapz\</FILEPATH>
      <FILENAME>fparser.cc</FILENAME>
      <LINE>2953</LINE>
      <COLUMN>25</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>FunctionParserBase&lt;double&gt;::Eval</FUNCTION>
    <DECORATED>?Eval@?$FunctionParserBase@N@@QEAANPEBN@Z</DECORATED>
    <FUNCLINE>2587</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\Mohamed\source\repos\trapz\trapz\</FILEPATH>
      <FILENAME>fparser.cc</FILENAME>
      <LINE>2955</LINE>
      <COLUMN>48</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>FunctionParserBase&lt;double&gt;::Eval</FUNCTION>
    <DECORATED>?Eval@?$FunctionParserBase@N@@QEAANPEBN@Z</DECORATED>
    <FUNCLINE>2587</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\Mohamed\source\repos\trapz\trapz\</FILEPATH>
      <FILENAME>fparser.cc</FILENAME>
      <LINE>2955</LINE>
      <COLUMN>22</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>FunctionParserBase&lt;double&gt;::Eval</FUNCTION>
    <DECORATED>?Eval@?$FunctionParserBase@N@@QEAANPEBN@Z</DECORATED>
    <FUNCLINE>2587</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\Mohamed\source\repos\trapz\trapz\</FILEPATH>
      <FILENAME>fparser.cc</FILENAME>
      <LINE>2940</LINE>
      <COLUMN>31</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>FunctionParserBase&lt;double&gt;::Eval</FUNCTION>
    <DECORATED>?Eval@?$FunctionParserBase@N@@QEAANPEBN@Z</DECORATED>
    <FUNCLINE>2587</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\Mohamed\source\repos\trapz\trapz\</FILEPATH>
      <FILENAME>fparser.cc</FILENAME>
      <LINE>2927</LINE>
      <COLUMN>45</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>FunctionParserBase&lt;double&gt;::Eval</FUNCTION>
    <DECORATED>?Eval@?$FunctionParserBase@N@@QEAANPEBN@Z</DECORATED>
    <FUNCLINE>2587</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\Mohamed\source\repos\trapz\trapz\</FILEPATH>
      <FILENAME>fparser.cc</FILENAME>
      <LINE>2927</LINE>
      <COLUMN>22</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>FunctionParserBase&lt;double&gt;::Eval</FUNCTION>
    <DECORATED>?Eval@?$FunctionParserBase@N@@QEAANPEBN@Z</DECORATED>
    <FUNCLINE>2587</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\Mohamed\source\repos\trapz\trapz\</FILEPATH>
      <FILENAME>fparser.cc</FILENAME>
      <LINE>2924</LINE>
      <COLUMN>46</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>FunctionParserBase&lt;double&gt;::Eval</FUNCTION>
    <DECORATED>?Eval@?$FunctionParserBase@N@@QEAANPEBN@Z</DECORATED>
    <FUNCLINE>2587</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\Mohamed\source\repos\trapz\trapz\</FILEPATH>
      <FILENAME>fparser.cc</FILENAME>
      <LINE>2924</LINE>
      <COLUMN>22</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>FunctionParserBase&lt;double&gt;::Eval</FUNCTION>
    <DECORATED>?Eval@?$FunctionParserBase@N@@QEAANPEBN@Z</DECORATED>
    <FUNCLINE>2587</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\Mohamed\source\repos\trapz\trapz\</FILEPATH>
      <FILENAME>fparser.cc</FILENAME>
      <LINE>2915</LINE>
      <COLUMN>45</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>FunctionParserBase&lt;double&gt;::Eval</FUNCTION>
    <DECORATED>?Eval@?$FunctionParserBase@N@@QEAANPEBN@Z</DECORATED>
    <FUNCLINE>2587</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\Mohamed\source\repos\trapz\trapz\</FILEPATH>
      <FILENAME>fparser.cc</FILENAME>
      <LINE>2911</LINE>
      <COLUMN>43</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>FunctionParserBase&lt;double&gt;::Eval</FUNCTION>
    <DECORATED>?Eval@?$FunctionParserBase@N@@QEAANPEBN@Z</DECORATED>
    <FUNCLINE>2587</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\Mohamed\source\repos\trapz\trapz\</FILEPATH>
      <FILENAME>fparser.cc</FILENAME>
      <LINE>2900</LINE>
      <COLUMN>27</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>FunctionParserBase&lt;double&gt;::Eval</FUNCTION>
    <DECORATED>?Eval@?$FunctionParserBase@N@@QEAANPEBN@Z</DECORATED>
    <FUNCLINE>2587</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\Mohamed\source\repos\trapz\trapz\</FILEPATH>
      <FILENAME>fparser.cc</FILENAME>
      <LINE>2901</LINE>
      <COLUMN>29</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>FunctionParserBase&lt;double&gt;::Eval</FUNCTION>
    <DECORATED>?Eval@?$FunctionParserBase@N@@QEAANPEBN@Z</DECORATED>
    <FUNCLINE>2587</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\Mohamed\source\repos\trapz\trapz\</FILEPATH>
      <FILENAME>fparser.cc</FILENAME>
      <LINE>2903</LINE>
      <COLUMN>44</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>FunctionParserBase&lt;double&gt;::Eval</FUNCTION>
    <DECORATED>?Eval@?$FunctionParserBase@N@@QEAANPEBN@Z</DECORATED>
    <FUNCLINE>2587</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\Mohamed\source\repos\trapz\trapz\</FILEPATH>
      <FILENAME>fparser.cc</FILENAME>
      <LINE>2903</LINE>
      <COLUMN>22</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>FunctionParserBase&lt;double&gt;::Eval</FUNCTION>
    <DECORATED>?Eval@?$FunctionParserBase@N@@QEAANPEBN@Z</DECORATED>
    <FUNCLINE>2587</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\Mohamed\source\repos\trapz\trapz\</FILEPATH>
      <FILENAME>fparser.cc</FILENAME>
      <LINE>2884</LINE>
      <COLUMN>26</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>FunctionParserBase&lt;double&gt;::Eval</FUNCTION>
    <DECORATED>?Eval@?$FunctionParserBase@N@@QEAANPEBN@Z</DECORATED>
    <FUNCLINE>2587</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\Mohamed\source\repos\trapz\trapz\</FILEPATH>
      <FILENAME>fparser.cc</FILENAME>
      <LINE>2867</LINE>
      <COLUMN>39</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>FunctionParserBase&lt;double&gt;::Eval</FUNCTION>
    <DECORATED>?Eval@?$FunctionParserBase@N@@QEAANPEBN@Z</DECORATED>
    <FUNCLINE>2587</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\Mohamed\source\repos\trapz\trapz\</FILEPATH>
      <FILENAME>fparser.cc</FILENAME>
      <LINE>2867</LINE>
      <COLUMN>32</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>FunctionParserBase&lt;double&gt;::Eval</FUNCTION>
    <DECORATED>?Eval@?$FunctionParserBase@N@@QEAANPEBN@Z</DECORATED>
    <FUNCLINE>2587</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\Mohamed\source\repos\trapz\trapz\</FILEPATH>
      <FILENAME>fparser.cc</FILENAME>
      <LINE>2853</LINE>
      <COLUMN>74</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>FunctionParserBase&lt;double&gt;::Eval</FUNCTION>
    <DECORATED>?Eval@?$FunctionParserBase@N@@QEAANPEBN@Z</DECORATED>
    <FUNCLINE>2587</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\Mohamed\source\repos\trapz\trapz\</FILEPATH>
      <FILENAME>fparser.cc</FILENAME>
      <LINE>2853</LINE>
      <COLUMN>67</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>FunctionParserBase&lt;double&gt;::Eval</FUNCTION>
    <DECORATED>?Eval@?$FunctionParserBase@N@@QEAANPEBN@Z</DECORATED>
    <FUNCLINE>2587</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\Mohamed\source\repos\trapz\trapz\</FILEPATH>
      <FILENAME>fparser.cc</FILENAME>
      <LINE>2855</LINE>
      <COLUMN>39</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>FunctionParserBase&lt;double&gt;::Eval</FUNCTION>
    <DECORATED>?Eval@?$FunctionParserBase@N@@QEAANPEBN@Z</DECORATED>
    <FUNCLINE>2587</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\Mohamed\source\repos\trapz\trapz\</FILEPATH>
      <FILENAME>fparser.cc</FILENAME>
      <LINE>2855</LINE>
      <COLUMN>32</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>FunctionParserBase&lt;double&gt;::Eval</FUNCTION>
    <DECORATED>?Eval@?$FunctionParserBase@N@@QEAANPEBN@Z</DECORATED>
    <FUNCLINE>2587</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\Mohamed\source\repos\trapz\trapz\</FILEPATH>
      <FILENAME>fparser.cc</FILENAME>
      <LINE>2839</LINE>
      <COLUMN>42</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>FunctionParserBase&lt;double&gt;::Eval</FUNCTION>
    <DECORATED>?Eval@?$FunctionParserBase@N@@QEAANPEBN@Z</DECORATED>
    <FUNCLINE>2587</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\Mohamed\source\repos\trapz\trapz\</FILEPATH>
      <FILENAME>fparser.cc</FILENAME>
      <LINE>2839</LINE>
      <COLUMN>22</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>FunctionParserBase&lt;double&gt;::Eval</FUNCTION>
    <DECORATED>?Eval@?$FunctionParserBase@N@@QEAANPEBN@Z</DECORATED>
    <FUNCLINE>2587</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\Mohamed\source\repos\trapz\trapz\</FILEPATH>
      <FILENAME>fparser.cc</FILENAME>
      <LINE>2835</LINE>
      <COLUMN>43</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>FunctionParserBase&lt;double&gt;::Eval</FUNCTION>
    <DECORATED>?Eval@?$FunctionParserBase@N@@QEAANPEBN@Z</DECORATED>
    <FUNCLINE>2587</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\Mohamed\source\repos\trapz\trapz\</FILEPATH>
      <FILENAME>fparser.cc</FILENAME>
      <LINE>2835</LINE>
      <COLUMN>22</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>FunctionParserBase&lt;double&gt;::Eval</FUNCTION>
    <DECORATED>?Eval@?$FunctionParserBase@N@@QEAANPEBN@Z</DECORATED>
    <FUNCLINE>2587</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\Mohamed\source\repos\trapz\trapz\</FILEPATH>
      <FILENAME>fparser.cc</FILENAME>
      <LINE>2827</LINE>
      <COLUMN>59</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>FunctionParserBase&lt;double&gt;::Eval</FUNCTION>
    <DECORATED>?Eval@?$FunctionParserBase@N@@QEAANPEBN@Z</DECORATED>
    <FUNCLINE>2587</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\Mohamed\source\repos\trapz\trapz\</FILEPATH>
      <FILENAME>fparser.cc</FILENAME>
      <LINE>2827</LINE>
      <COLUMN>22</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>FunctionParserBase&lt;double&gt;::Eval</FUNCTION>
    <DECORATED>?Eval@?$FunctionParserBase@N@@QEAANPEBN@Z</DECORATED>
    <FUNCLINE>2587</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\Mohamed\source\repos\trapz\trapz\</FILEPATH>
      <FILENAME>fparser.cc</FILENAME>
      <LINE>2823</LINE>
      <COLUMN>55</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>FunctionParserBase&lt;double&gt;::Eval</FUNCTION>
    <DECORATED>?Eval@?$FunctionParserBase@N@@QEAANPEBN@Z</DECORATED>
    <FUNCLINE>2587</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\Mohamed\source\repos\trapz\trapz\</FILEPATH>
      <FILENAME>fparser.cc</FILENAME>
      <LINE>2823</LINE>
      <COLUMN>22</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>FunctionParserBase&lt;double&gt;::Eval</FUNCTION>
    <DECORATED>?Eval@?$FunctionParserBase@N@@QEAANPEBN@Z</DECORATED>
    <FUNCLINE>2587</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\Mohamed\source\repos\trapz\trapz\</FILEPATH>
      <FILENAME>fparser.cc</FILENAME>
      <LINE>2819</LINE>
      <COLUMN>48</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>FunctionParserBase&lt;double&gt;::Eval</FUNCTION>
    <DECORATED>?Eval@?$FunctionParserBase@N@@QEAANPEBN@Z</DECORATED>
    <FUNCLINE>2587</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\Mohamed\source\repos\trapz\trapz\</FILEPATH>
      <FILENAME>fparser.cc</FILENAME>
      <LINE>2819</LINE>
      <COLUMN>22</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>FunctionParserBase&lt;double&gt;::Eval</FUNCTION>
    <DECORATED>?Eval@?$FunctionParserBase@N@@QEAANPEBN@Z</DECORATED>
    <FUNCLINE>2587</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\Mohamed\source\repos\trapz\trapz\</FILEPATH>
      <FILENAME>fparser.cc</FILENAME>
      <LINE>2815</LINE>
      <COLUMN>44</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>FunctionParserBase&lt;double&gt;::Eval</FUNCTION>
    <DECORATED>?Eval@?$FunctionParserBase@N@@QEAANPEBN@Z</DECORATED>
    <FUNCLINE>2587</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\Mohamed\source\repos\trapz\trapz\</FILEPATH>
      <FILENAME>fparser.cc</FILENAME>
      <LINE>2815</LINE>
      <COLUMN>22</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>FunctionParserBase&lt;double&gt;::Eval</FUNCTION>
    <DECORATED>?Eval@?$FunctionParserBase@N@@QEAANPEBN@Z</DECORATED>
    <FUNCLINE>2587</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\Mohamed\source\repos\trapz\trapz\</FILEPATH>
      <FILENAME>fparser.cc</FILENAME>
      <LINE>2811</LINE>
      <COLUMN>46</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>FunctionParserBase&lt;double&gt;::Eval</FUNCTION>
    <DECORATED>?Eval@?$FunctionParserBase@N@@QEAANPEBN@Z</DECORATED>
    <FUNCLINE>2587</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\Mohamed\source\repos\trapz\trapz\</FILEPATH>
      <FILENAME>fparser.cc</FILENAME>
      <LINE>2811</LINE>
      <COLUMN>22</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>FunctionParserBase&lt;double&gt;::Eval</FUNCTION>
    <DECORATED>?Eval@?$FunctionParserBase@N@@QEAANPEBN@Z</DECORATED>
    <FUNCLINE>2587</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\Mohamed\source\repos\trapz\trapz\</FILEPATH>
      <FILENAME>fparser.cc</FILENAME>
      <LINE>2807</LINE>
      <COLUMN>45</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>FunctionParserBase&lt;double&gt;::Eval</FUNCTION>
    <DECORATED>?Eval@?$FunctionParserBase@N@@QEAANPEBN@Z</DECORATED>
    <FUNCLINE>2587</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\Mohamed\source\repos\trapz\trapz\</FILEPATH>
      <FILENAME>fparser.cc</FILENAME>
      <LINE>2807</LINE>
      <COLUMN>22</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>FunctionParserBase&lt;double&gt;::Eval</FUNCTION>
    <DECORATED>?Eval@?$FunctionParserBase@N@@QEAANPEBN@Z</DECORATED>
    <FUNCLINE>2587</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\Mohamed\source\repos\trapz\trapz\</FILEPATH>
      <FILENAME>fparser.cc</FILENAME>
      <LINE>2803</LINE>
      <COLUMN>43</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>FunctionParserBase&lt;double&gt;::Eval</FUNCTION>
    <DECORATED>?Eval@?$FunctionParserBase@N@@QEAANPEBN@Z</DECORATED>
    <FUNCLINE>2587</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\Mohamed\source\repos\trapz\trapz\</FILEPATH>
      <FILENAME>fparser.cc</FILENAME>
      <LINE>2803</LINE>
      <COLUMN>22</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>FunctionParserBase&lt;double&gt;::Eval</FUNCTION>
    <DECORATED>?Eval@?$FunctionParserBase@N@@QEAANPEBN@Z</DECORATED>
    <FUNCLINE>2587</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\Mohamed\source\repos\trapz\trapz\</FILEPATH>
      <FILENAME>fparser.cc</FILENAME>
      <LINE>2798</LINE>
      <COLUMN>22</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>FunctionParserBase&lt;double&gt;::Eval</FUNCTION>
    <DECORATED>?Eval@?$FunctionParserBase@N@@QEAANPEBN@Z</DECORATED>
    <FUNCLINE>2587</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\Mohamed\source\repos\trapz\trapz\</FILEPATH>
      <FILENAME>fparser.cc</FILENAME>
      <LINE>2793</LINE>
      <COLUMN>31</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>FunctionParserBase&lt;double&gt;::Eval</FUNCTION>
    <DECORATED>?Eval@?$FunctionParserBase@N@@QEAANPEBN@Z</DECORATED>
    <FUNCLINE>2587</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\Mohamed\source\repos\trapz\trapz\</FILEPATH>
      <FILENAME>fparser.cc</FILENAME>
      <LINE>2792</LINE>
      <COLUMN>31</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>FunctionParserBase&lt;double&gt;::Eval</FUNCTION>
    <DECORATED>?Eval@?$FunctionParserBase@N@@QEAANPEBN@Z</DECORATED>
    <FUNCLINE>2587</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\Mohamed\source\repos\trapz\trapz\</FILEPATH>
      <FILENAME>fparser.cc</FILENAME>
      <LINE>2791</LINE>
      <COLUMN>31</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>FunctionParserBase&lt;double&gt;::Eval</FUNCTION>
    <DECORATED>?Eval@?$FunctionParserBase@N@@QEAANPEBN@Z</DECORATED>
    <FUNCLINE>2587</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\Mohamed\source\repos\trapz\trapz\</FILEPATH>
      <FILENAME>fparser.cc</FILENAME>
      <LINE>2747</LINE>
      <COLUMN>25</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>FunctionParserBase&lt;double&gt;::Eval</FUNCTION>
    <DECORATED>?Eval@?$FunctionParserBase@N@@QEAANPEBN@Z</DECORATED>
    <FUNCLINE>2587</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\Mohamed\source\repos\trapz\trapz\</FILEPATH>
      <FILENAME>fparser.cc</FILENAME>
      <LINE>2750</LINE>
      <COLUMN>43</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>FunctionParserBase&lt;double&gt;::Eval</FUNCTION>
    <DECORATED>?Eval@?$FunctionParserBase@N@@QEAANPEBN@Z</DECORATED>
    <FUNCLINE>2587</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\Mohamed\source\repos\trapz\trapz\</FILEPATH>
      <FILENAME>fparser.cc</FILENAME>
      <LINE>2750</LINE>
      <COLUMN>22</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>FunctionParserBase&lt;double&gt;::Eval</FUNCTION>
    <DECORATED>?Eval@?$FunctionParserBase@N@@QEAANPEBN@Z</DECORATED>
    <FUNCLINE>2587</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\Mohamed\source\repos\trapz\trapz\</FILEPATH>
      <FILENAME>fparser.cc</FILENAME>
      <LINE>2735</LINE>
      <COLUMN>52</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>FunctionParserBase&lt;double&gt;::Eval</FUNCTION>
    <DECORATED>?Eval@?$FunctionParserBase@N@@QEAANPEBN@Z</DECORATED>
    <FUNCLINE>2587</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\Mohamed\source\repos\trapz\trapz\</FILEPATH>
      <FILENAME>fparser.cc</FILENAME>
      <LINE>2735</LINE>
      <COLUMN>31</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>FunctionParserBase&lt;double&gt;::Eval</FUNCTION>
    <DECORATED>?Eval@?$FunctionParserBase@N@@QEAANPEBN@Z</DECORATED>
    <FUNCLINE>2587</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\Mohamed\source\repos\trapz\trapz\</FILEPATH>
      <FILENAME>fparser.cc</FILENAME>
      <LINE>2732</LINE>
      <COLUMN>52</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>FunctionParserBase&lt;double&gt;::Eval</FUNCTION>
    <DECORATED>?Eval@?$FunctionParserBase@N@@QEAANPEBN@Z</DECORATED>
    <FUNCLINE>2587</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\Mohamed\source\repos\trapz\trapz\</FILEPATH>
      <FILENAME>fparser.cc</FILENAME>
      <LINE>2732</LINE>
      <COLUMN>31</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>FunctionParserBase&lt;double&gt;::Eval</FUNCTION>
    <DECORATED>?Eval@?$FunctionParserBase@N@@QEAANPEBN@Z</DECORATED>
    <FUNCLINE>2587</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\Mohamed\source\repos\trapz\trapz\</FILEPATH>
      <FILENAME>fparser.cc</FILENAME>
      <LINE>2693</LINE>
      <COLUMN>45</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>FunctionParserBase&lt;double&gt;::Eval</FUNCTION>
    <DECORATED>?Eval@?$FunctionParserBase@N@@QEAANPEBN@Z</DECORATED>
    <FUNCLINE>2587</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\Mohamed\source\repos\trapz\trapz\</FILEPATH>
      <FILENAME>fparser.cc</FILENAME>
      <LINE>2693</LINE>
      <COLUMN>22</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>FunctionParserBase&lt;double&gt;::Eval</FUNCTION>
    <DECORATED>?Eval@?$FunctionParserBase@N@@QEAANPEBN@Z</DECORATED>
    <FUNCLINE>2587</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\Mohamed\source\repos\trapz\trapz\</FILEPATH>
      <FILENAME>fparser.cc</FILENAME>
      <LINE>2651</LINE>
      <COLUMN>54</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>FunctionParserBase&lt;double&gt;::Eval</FUNCTION>
    <DECORATED>?Eval@?$FunctionParserBase@N@@QEAANPEBN@Z</DECORATED>
    <FUNCLINE>2587</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\Mohamed\source\repos\trapz\trapz\</FILEPATH>
      <FILENAME>fparser.cc</FILENAME>
      <LINE>2651</LINE>
      <COLUMN>31</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>FunctionParserBase&lt;double&gt;::Eval</FUNCTION>
    <DECORATED>?Eval@?$FunctionParserBase@N@@QEAANPEBN@Z</DECORATED>
    <FUNCLINE>2587</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\Mohamed\source\repos\trapz\trapz\extrasrc\</FILEPATH>
      <FILENAME>fp_opcode_add.inc</FILENAME>
      <LINE>2655</LINE>
      <COLUMN>5</COLUMN>
    </SFA>
    <DEFECTCODE>6011</DEFECTCODE>
    <DESCRIPTION>Dereferencing NULL pointer 'ByteCodePtr'. </DESCRIPTION>
    <FUNCTION>FunctionParserBase&lt;double&gt;::AddFunctionOpcode</FUNCTION>
    <DECORATED>?AddFunctionOpcode@?$FunctionParserBase@N@@AEAAXI@Z</DECORATED>
    <FUNCLINE>1641</FUNCLINE>
    <PROBABILITY>1</PROBABILITY>
    <RANK>4</RANK>
    <CATEGORY>
      <RULECATEGORY>mspft</RULECATEGORY>
    </CATEGORY>
    <PATH>
      <SFA>
        <FILEPATH>C:\Users\Mohamed\source\repos\trapz\trapz\extrasrc\</FILEPATH>
        <FILENAME>fp_opcode_add.inc</FILENAME>
        <LINE>334</LINE>
        <COLUMN>3</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\Mohamed\source\repos\trapz\trapz\extrasrc\</FILEPATH>
        <FILENAME>fp_opcode_add.inc</FILENAME>
        <LINE>334</LINE>
        <COLUMN>9</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\Mohamed\source\repos\trapz\trapz\extrasrc\</FILEPATH>
        <FILENAME>fp_opcode_add.inc</FILENAME>
        <LINE>336</LINE>
        <COLUMN>0</COLUMN>
        <KEYEVENT>
          <ID>1</ID>
          <KIND>declaration</KIND>
          <IMPORTANCE>Essential</IMPORTANCE>
          <MESSAGE>'ByteCodePtr' may be NULL</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\Mohamed\source\repos\trapz\trapz\extrasrc\</FILEPATH>
        <FILENAME>fp_opcode_add.inc</FILENAME>
        <LINE>2649</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\Mohamed\source\repos\trapz\trapz\extrasrc\</FILEPATH>
        <FILENAME>fp_opcode_add.inc</FILENAME>
        <LINE>2650</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\Mohamed\source\repos\trapz\trapz\extrasrc\</FILEPATH>
        <FILENAME>fp_opcode_add.inc</FILENAME>
        <LINE>2651</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\Mohamed\source\repos\trapz\trapz\extrasrc\</FILEPATH>
        <FILENAME>fp_opcode_add.inc</FILENAME>
        <LINE>2652</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\Mohamed\source\repos\trapz\trapz\extrasrc\</FILEPATH>
        <FILENAME>fp_opcode_add.inc</FILENAME>
        <LINE>2653</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\Mohamed\source\repos\trapz\trapz\extrasrc\</FILEPATH>
        <FILENAME>fp_opcode_add.inc</FILENAME>
        <LINE>2654</LINE>
        <COLUMN>0</COLUMN>
        <KEYEVENT>
          <ID>2</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Assume switch ( 'opcode' ) resolves to case cAbs: </MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\Mohamed\source\repos\trapz\trapz\extrasrc\</FILEPATH>
        <FILENAME>fp_opcode_add.inc</FILENAME>
        <LINE>2654</LINE>
        <COLUMN>18</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\Mohamed\source\repos\trapz\trapz\extrasrc\</FILEPATH>
        <FILENAME>fp_opcode_add.inc</FILENAME>
        <LINE>2655</LINE>
        <COLUMN>5</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\Mohamed\source\repos\trapz\trapz\extrasrc\</FILEPATH>
        <FILENAME>fp_opcode_add.inc</FILENAME>
        <LINE>2655</LINE>
        <COLUMN>5</COLUMN>
        <KEYEVENT>
          <ID>3</ID>
          <KIND>usage</KIND>
          <IMPORTANCE>Essential</IMPORTANCE>
          <MESSAGE>'ByteCodePtr' is dereferenced, but may still be NULL</MESSAGE>
        </KEYEVENT>
      </SFA>
    </PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\Mohamed\source\repos\trapz\trapz\extrasrc\</FILEPATH>
      <FILENAME>fp_opcode_add.inc</FILENAME>
      <LINE>2656</LINE>
      <COLUMN>0</COLUMN>
    </SFA>
    <DEFECTCODE>6011</DEFECTCODE>
    <DESCRIPTION>Dereferencing NULL pointer 'ImmedPtr'. </DESCRIPTION>
    <FUNCTION>FunctionParserBase&lt;double&gt;::AddFunctionOpcode</FUNCTION>
    <DECORATED>?AddFunctionOpcode@?$FunctionParserBase@N@@AEAAXI@Z</DECORATED>
    <FUNCLINE>1641</FUNCLINE>
    <PROBABILITY>1</PROBABILITY>
    <RANK>4</RANK>
    <CATEGORY>
      <RULECATEGORY>mspft</RULECATEGORY>
    </CATEGORY>
    <PATH>
      <SFA>
        <FILEPATH>C:\Users\Mohamed\source\repos\trapz\trapz\extrasrc\</FILEPATH>
        <FILENAME>fp_opcode_add.inc</FILENAME>
        <LINE>334</LINE>
        <COLUMN>3</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\Mohamed\source\repos\trapz\trapz\extrasrc\</FILEPATH>
        <FILENAME>fp_opcode_add.inc</FILENAME>
        <LINE>334</LINE>
        <COLUMN>9</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\Mohamed\source\repos\trapz\trapz\extrasrc\</FILEPATH>
        <FILENAME>fp_opcode_add.inc</FILENAME>
        <LINE>336</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\Mohamed\source\repos\trapz\trapz\extrasrc\</FILEPATH>
        <FILENAME>fp_opcode_add.inc</FILENAME>
        <LINE>2649</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\Mohamed\source\repos\trapz\trapz\extrasrc\</FILEPATH>
        <FILENAME>fp_opcode_add.inc</FILENAME>
        <LINE>2650</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\Mohamed\source\repos\trapz\trapz\extrasrc\</FILEPATH>
        <FILENAME>fp_opcode_add.inc</FILENAME>
        <LINE>2651</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\Mohamed\source\repos\trapz\trapz\extrasrc\</FILEPATH>
        <FILENAME>fp_opcode_add.inc</FILENAME>
        <LINE>2652</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\Mohamed\source\repos\trapz\trapz\extrasrc\</FILEPATH>
        <FILENAME>fp_opcode_add.inc</FILENAME>
        <LINE>2653</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\Mohamed\source\repos\trapz\trapz\extrasrc\</FILEPATH>
        <FILENAME>fp_opcode_add.inc</FILENAME>
        <LINE>2654</LINE>
        <COLUMN>0</COLUMN>
        <KEYEVENT>
          <ID>1</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Assume switch ( 'opcode' ) resolves to case cAbs: </MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\Mohamed\source\repos\trapz\trapz\extrasrc\</FILEPATH>
        <FILENAME>fp_opcode_add.inc</FILENAME>
        <LINE>2654</LINE>
        <COLUMN>18</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\Mohamed\source\repos\trapz\trapz\extrasrc\</FILEPATH>
        <FILENAME>fp_opcode_add.inc</FILENAME>
        <LINE>2655</LINE>
        <COLUMN>5</COLUMN>
        <KEYEVENT>
          <ID>2</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Assume switch ( 'ByteCodePtr[0]' ) resolves to case cNeg: </MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\Mohamed\source\repos\trapz\trapz\extrasrc\</FILEPATH>
        <FILENAME>fp_opcode_add.inc</FILENAME>
        <LINE>2656</LINE>
        <COLUMN>0</COLUMN>
        <KEYEVENT>
          <ID>3</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Go to Lab</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\Mohamed\source\repos\trapz\trapz\extrasrc\</FILEPATH>
        <FILENAME>fp_opcode_add.inc</FILENAME>
        <LINE>4571</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\Mohamed\source\repos\trapz\trapz\extrasrc\</FILEPATH>
        <FILENAME>fp_opcode_add.inc</FILENAME>
        <LINE>4571</LINE>
        <COLUMN>4</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\Mohamed\source\repos\trapz\trapz\extrasrc\</FILEPATH>
        <FILENAME>fp_opcode_add.inc</FILENAME>
        <LINE>4572</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\Mohamed\source\repos\trapz\trapz\extrasrc\</FILEPATH>
        <FILENAME>fp_opcode_add.inc</FILENAME>
        <LINE>4572</LINE>
        <COLUMN>13</COLUMN>
        <KEYEVENT>
          <ID>4</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Go to TailCall_cAbs</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\Mohamed\source\repos\trapz\trapz\extrasrc\</FILEPATH>
        <FILENAME>fp_opcode_add.inc</FILENAME>
        <LINE>2654</LINE>
        <COLUMN>4</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\Mohamed\source\repos\trapz\trapz\extrasrc\</FILEPATH>
        <FILENAME>fp_opcode_add.inc</FILENAME>
        <LINE>2654</LINE>
        <COLUMN>18</COLUMN>
        <KEYEVENT>
          <ID>5</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume '!ByteCodePtr' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\Mohamed\source\repos\trapz\trapz\extrasrc\</FILEPATH>
        <FILENAME>fp_opcode_add.inc</FILENAME>
        <LINE>2655</LINE>
        <COLUMN>5</COLUMN>
        <KEYEVENT>
          <ID>6</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Assume switch ( 'ByteCodePtr[0]' ) resolves to case cNeg: </MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\Mohamed\source\repos\trapz\trapz\extrasrc\</FILEPATH>
        <FILENAME>fp_opcode_add.inc</FILENAME>
        <LINE>2656</LINE>
        <COLUMN>0</COLUMN>
        <KEYEVENT>
          <ID>7</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Go to Lab</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\Mohamed\source\repos\trapz\trapz\extrasrc\</FILEPATH>
        <FILENAME>fp_opcode_add.inc</FILENAME>
        <LINE>4571</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\Mohamed\source\repos\trapz\trapz\extrasrc\</FILEPATH>
        <FILENAME>fp_opcode_add.inc</FILENAME>
        <LINE>4571</LINE>
        <COLUMN>4</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\Mohamed\source\repos\trapz\trapz\extrasrc\</FILEPATH>
        <FILENAME>fp_opcode_add.inc</FILENAME>
        <LINE>4572</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\Mohamed\source\repos\trapz\trapz\extrasrc\</FILEPATH>
        <FILENAME>fp_opcode_add.inc</FILENAME>
        <LINE>4572</LINE>
        <COLUMN>13</COLUMN>
        <KEYEVENT>
          <ID>8</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Go to TailCall_cAbs</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\Mohamed\source\repos\trapz\trapz\extrasrc\</FILEPATH>
        <FILENAME>fp_opcode_add.inc</FILENAME>
        <LINE>2654</LINE>
        <COLUMN>4</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\Mohamed\source\repos\trapz\trapz\extrasrc\</FILEPATH>
        <FILENAME>fp_opcode_add.inc</FILENAME>
        <LINE>2654</LINE>
        <COLUMN>18</COLUMN>
        <KEYEVENT>
          <ID>9</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume '!ByteCodePtr' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\Mohamed\source\repos\trapz\trapz\extrasrc\</FILEPATH>
        <FILENAME>fp_opcode_add.inc</FILENAME>
        <LINE>2655</LINE>
        <COLUMN>5</COLUMN>
        <KEYEVENT>
          <ID>10</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Assume switch ( 'ByteCodePtr[0]' ) resolves to case cImmed: </MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\Mohamed\source\repos\trapz\trapz\extrasrc\</FILEPATH>
        <FILENAME>fp_opcode_add.inc</FILENAME>
        <LINE>2656</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\Mohamed\source\repos\trapz\trapz\extrasrc\</FILEPATH>
        <FILENAME>fp_opcode_add.inc</FILENAME>
        <LINE>2656</LINE>
        <COLUMN>0</COLUMN>
        <KEYEVENT>
          <ID>11</ID>
          <KIND>usage</KIND>
          <IMPORTANCE>Essential</IMPORTANCE>
          <MESSAGE>'ImmedPtr' is dereferenced, but may still be NULL</MESSAGE>
        </KEYEVENT>
      </SFA>
    </PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\Mohamed\source\repos\trapz\trapz\</FILEPATH>
      <FILENAME>fparser.cc</FILENAME>
      <LINE>726</LINE>
      <COLUMN>35</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'FunctionParserBase&lt;double&gt;::Data::mHasByteCodeFlags' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>FunctionParserBase&lt;double&gt;::Data::{ctor}</FUNCTION>
    <DECORATED>??0Data@?$FunctionParserBase@N@@QEAA@AEBU01@@Z</DECORATED>
    <FUNCLINE>726</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>FunctionParserBase&lt;double&gt;::Data::mHasByteCodeFlags</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\Mohamed\source\repos\trapz\trapz\</FILEPATH>
      <FILENAME>fparser.cc</FILENAME>
      <LINE>714</LINE>
      <COLUMN>35</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'FunctionParserBase&lt;double&gt;::Data::mHasByteCodeFlags' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>FunctionParserBase&lt;double&gt;::Data::{ctor}</FUNCTION>
    <DECORATED>??0Data@?$FunctionParserBase@N@@QEAA@XZ</DECORATED>
    <FUNCLINE>714</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>FunctionParserBase&lt;double&gt;::Data::mHasByteCodeFlags</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\Mohamed\source\repos\trapz\trapz\</FILEPATH>
      <FILENAME>fparser.cc</FILENAME>
      <LINE>432</LINE>
      <COLUMN>12</COLUMN>
    </SFA>
    <DEFECTCODE>6385</DEFECTCODE>
    <DESCRIPTION>Reading invalid data from 'Functions'.</DESCRIPTION>
    <FUNCTION>`anonymous-namespace'::readIdentifier</FUNCTION>
    <DECORATED>??$readIdentifier@N@?A0x5960c264@@YAIPEBD@Z</DECORATED>
    <FUNCLINE>419</FUNCLINE>
    <PROBABILITY>1</PROBABILITY>
    <RANK>4</RANK>
    <CATEGORY>
      <RULECATEGORY>mspft</RULECATEGORY>
    </CATEGORY>
    <PATH>
      <SFA>
        <FILEPATH>C:\Users\Mohamed\source\repos\trapz\trapz\</FILEPATH>
        <FILENAME>fparser.cc</FILENAME>
        <LINE>421</LINE>
        <COLUMN>23</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\Mohamed\source\repos\trapz\trapz\</FILEPATH>
        <FILENAME>fparser.cc</FILENAME>
        <LINE>422</LINE>
        <COLUMN>34</COLUMN>
        <KEYEVENT>
          <ID>1</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Enter this branch, (assume '((value&amp;2147483648))!=0')</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\Mohamed\source\repos\trapz\trapz\</FILEPATH>
        <FILENAME>fparser.cc</FILENAME>
        <LINE>426</LINE>
        <COLUMN>12</COLUMN>
        <KEYEVENT>
          <ID>2</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume 'result' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\Mohamed\source\repos\trapz\trapz\</FILEPATH>
        <FILENAME>fparser.cc</FILENAME>
        <LINE>432</LINE>
        <COLUMN>12</COLUMN>
        <KEYEVENT>
          <ID>3</ID>
          <KIND>declaration</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>'Functions' is an Output from 'FUNCTIONPARSERTYPES::FuncDefinition::complexOnly' (declared at c:\users\mohamed\source\repos\trapz\trapz\extrasrc\fptypes.hh:109)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\Mohamed\source\repos\trapz\trapz\</FILEPATH>
        <FILENAME>fparser.cc</FILENAME>
        <LINE>432</LINE>
        <COLUMN>12</COLUMN>
        <KEYEVENT>
          <ID>4</ID>
          <KIND>usage</KIND>
          <IMPORTANCE>Essential</IMPORTANCE>
          <MESSAGE>Invalid read from 'Functions[32767]', (readable range is 0 to 37)</MESSAGE>
        </KEYEVENT>
      </SFA>
    </PATH>
  </DEFECT>
</DEFECTS>